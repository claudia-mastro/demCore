% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen_nLx.R
\name{gen_nLx}
\alias{gen_nLx}
\title{Generate nLx}
\usage{
gen_nLx(dt, id_cols, terminal_age = 110, assert_na = T)
}
\arguments{
\item{dt}{data.table with lx, ax, dx, mx, age, and age_int variables.}

\item{id_cols}{character vector of id columns that uniquely identify each row of \code{dt}.}

\item{terminal_age}{numeric, the terminal age group for the data. Default: 110.}

\item{assert_na}{logical, whether to check for NA values in the generated nLx variable.}
}
\value{
dt with \code{nLx} column added.
}
\description{
Calculate average person-years lived in the age interval x to x+n,
given a data.table with:
\itemize{
\item ax = average years lived of those who died in the age interval
\item dx = number who died in the age interval
\item lx = number at the beginning of the age interval
\item mx = death rate (mx)
}

\eqn{_nL_x = n \cdot l_{x+n} + a_x \cdot d_x}
\eqn{_{\infty}L_x = l_x / m_x} for terminal age group

In words, this formula for \eqn{_nL_x} is years lived by survivors plus years
lived by those who died. For terminal ages, assume that average person years
lived equals number at the start of the age group divided by the death rate.
}
\examples{
dt <- data.table::data.table(
  sex = rep("both", 4),
  age = c(0, 5, 10, 15),
  age_int = c(5, 5, 5, 120),
  mx = c(0.1, 0.2, 0.3, 0.4),
  ax = c(2.5, 2.5, 2.5, 2.5)
)
dt[, qx := mx_ax_to_qx(mx, ax, age_int)]
dt <- qx_to_lx(dt, id_cols = c("sex"))
dt <- lx_to_dx(dt, id_cols = c("sex"), terminal_age = 15)
dt <- gen_nLx(dt, id_cols = c("sex"), terminal_age = 15)

}
